<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CSS Concepts Showcase</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: #333;
            line-height: 1.6;
            padding: 20px;
            min-height: 100vh;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        header {
            text-align: center;
            padding: 30px 0;
            color: white;
            margin-bottom: 30px;
        }
        
        header h1 {
            font-size: 3rem;
            margin-bottom: 15px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }
        
        header p {
            font-size: 1.2rem;
            max-width: 800px;
            margin: 0 auto;
            opacity: 0.9;
        }
        
        .nav-tabs {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            gap: 10px;
            margin-bottom: 30px;
        }
        
        .tab-btn {
            padding: 12px 25px;
            background: rgba(255, 255, 255, 0.2);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .tab-btn:hover {
            background: rgba(255, 255, 255, 0.3);
        }
        
        .tab-btn.active {
            background: white;
            color: #764ba2;
        }
        
        .content-section {
            display: none;
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
            margin-bottom: 30px;
        }
        
        .content-section.active {
            display: block;
            animation: fadeIn 0.5s ease;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        h2 {
            color: #764ba2;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid #f0f0f0;
        }
        
        h3 {
            color: #667eea;
            margin: 20px 0 10px;
        }
        
        .example-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin: 20px 0;
        }
        
        .example {
            flex: 1;
            min-width: 250px;
            background: #f9f9f9;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }
        
        .preview {
            height: 150px;
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 15px 0;
            border: 2px dashed #ddd;
            border-radius: 8px;
            overflow: hidden;
        }
        
        .code-example {
            background: #2c3e50;
            color: #ecf0f1;
            padding: 15px;
            border-radius: 8px;
            margin: 15px 0;
            overflow-x: auto;
            font-family: 'Courier New', monospace;
        }
        
        /* Flexbox Example */
        .flex-container {
            display: flex;
            gap: 10px;
            padding: 10px;
            background: #eef7ff;
            border-radius: 8px;
        }
        
        .flex-item {
            background: #667eea;
            color: white;
            padding: 15px;
            border-radius: 5px;
            text-align: center;
            flex: 1;
        }
        
        /* Grid Example */
        .grid-container {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 10px;
            padding: 10px;
            background: #f0e6ff;
            border-radius: 8px;
        }
        
        .grid-item {
            background: #764ba2;
            color: white;
            padding: 15px;
            border-radius: 5px;
            text-align: center;
        }
        
        /* Animation Example */
        .animated-box {
            width: 80px;
            height: 80px;
            background: #667eea;
            border-radius: 8px;
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); background: #764ba2; }
            100% { transform: scale(1); }
        }
        
        /* Transition Example */
        .transition-box {
            width: 100px;
            height: 100px;
            background: #764ba2;
            border-radius: 8px;
            transition: all 0.5s ease;
        }
        
        .transition-box:hover {
            transform: rotate(45deg);
            background: #667eea;
            border-radius: 50%;
        }
        
        /* Transform Example */
        .transform-item {
            width: 80px;
            height: 80px;
            background: #667eea;
            margin: 10px;
            display: inline-block;
            border-radius: 8px;
        }
        
        .transform-1 {
            transform: skew(20deg);
        }
        
        .transform-2 {
            transform: rotate(45deg);
        }
        
        .transform-3 {
            transform: translate(20px, -10px);
        }
        
        footer {
            text-align: center;
            padding: 20px;
            color: white;
            margin-top: 40px;
        }
        
        @media (max-width: 768px) {
            .example {
                flex: 100%;
            }
            
            header h1 {
                font-size: 2.2rem;
            }
            
            .nav-tabs {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1><i class="fab fa-css3-alt"></i> CSS Concepts Showcase</h1>
            <p>Explore the power of CSS with interactive examples</p>
        </header>
        
        <div class="nav-tabs">
            <button class="tab-btn active" onclick="showTab('flexbox')">Flexbox</button>
            <button class="tab-btn" onclick="showTab('grid')">CSS Grid</button>
            <button class="tab-btn" onclick="showTab('animations')">Animations</button>
            <button class="tab-btn" onclick="showTab('transitions')">Transitions</button>
            <button class="tab-btn" onclick="showTab('transforms')">Transforms</button>
            <button class="tab-btn" onclick="showTab('selectors')">Selectors</button>
        </div>
        
        <!-- Flexbox Section -->
        <section id="flexbox" class="content-section active">
            <h2><i class="fas fa-th"></i> CSS Flexbox</h2>
            <p>Flexbox is a one-dimensional layout method for arranging items in rows or columns.</p>
            
            <div class="example-container">
                <div class="example">
                    <h3>Flex Container</h3>
                    <div class="preview">
                        <div class="flex-container">
                            <div class="flex-item">Item 1</div>
                            <div class="flex-item">Item 2</div>
                            <div class="flex-item">Item 3</div>
                        </div>
                    </div>
                    <div class="code-example">
                        .flex-container {<br>
                        &nbsp;&nbsp;display: flex;<br>
                        &nbsp;&nbsp;gap: 10px;<br>
                        }<br><br>
                        
                        .flex-item {<br>
                        &nbsp;&nbsp;flex: 1;<br>
                        &nbsp;&nbsp;text-align: center;<br>
                        }
                    </div>
                </div>
                
                <div class="example">
                    <h3>Flex Direction</h3>
                    <div class="preview">
                        <div class="flex-container" style="flex-direction: column;">
                            <div class="flex-item">Item 1</div>
                            <div class="flex-item">Item 2</div>
                            <div class="flex-item">Item 3</div>
                        </div>
                    </div>
                    <div class="code-example">
                        .flex-container {<br>
                        &nbsp;&nbsp;display: flex;<br>
                        &nbsp;&nbsp;flex-direction: column;<br>
                        &nbsp;&nbsp;gap: 10px;<br>
                        }
                    </div>
                </div>
            </div>
        </section>
        
        <!-- CSS Grid Section -->
        <section id="grid" class="content-section">
            <h2><i class="fas fa-grip-horizontal"></i> CSS Grid</h2>
            <p>CSS Grid is a two-dimensional layout system designed for organizing content in rows and columns.</p>
            
            <div class="example-container">
                <div class="example">
                    <h3>Basic Grid</h3>
                    <div class="preview">
                        <div class="grid-container">
                            <div class="grid-item">1</div>
                            <div class="grid-item">2</div>
                            <div class="grid-item">3</div>
                            <div class="grid-item">4</div>
                            <div class="grid-item">5</div>
                            <div class="grid-item">6</div>
                        </div>
                    </div>
                    <div class="code-example">
                        .grid-container {<br>
                        &nbsp;&nbsp;display: grid;<br>
                        &nbsp;&nbsp;grid-template-columns: repeat(3, 1fr);<br>
                        &nbsp;&nbsp;gap: 10px;<br>
                        }
                    </div>
                </div>
                
                <div class="example">
                    <h3>Grid Areas</h3>
                    <div class="preview">
                        <div class="grid-container" style="grid-template-areas: 
                            'header header header'
                            'sidebar main main'
                            'footer footer footer';">
                            <div class="grid-item" style="grid-area: header;">Header</div>
                            <div class="grid-item" style="grid-area: sidebar;">Sidebar</div>
                            <div class="grid-item" style="grid-area: main;">Main</div>
                            <div class="grid-item" style="grid-area: footer;">Footer</div>
                        </div>
                    </div>
                    <div class="code-example">
                        .grid-container {<br>
                        &nbsp;&nbsp;display: grid;<br>
                        &nbsp;&nbsp;grid-template-areas: <br>
                        &nbsp;&nbsp;&nbsp;&nbsp;'header header header'<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;'sidebar main main'<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;'footer footer footer';<br>
                        &nbsp;&nbsp;gap: 10px;<br>
                        }
                    </div>
                </div>
            </div>
        </section>
        
        <!-- Animations Section -->
        <section id="animations" class="content-section">
            <h2><i class="fas fa-film"></i> CSS Animations</h2>
            <p>CSS animations allow you to create smooth, animated transitions between styles.</p>
            
            <div class="example-container">
                <div class="example">
                    <h3>Keyframes Animation</h3>
                    <div class="preview">
                        <div class="animated-box"></div>
                    </div>
                    <div class="code-example">
                        @keyframes pulse {<br>
                        &nbsp;&nbsp;0% { transform: scale(1); }<br>
                        &nbsp;&nbsp;50% { transform: scale(1.1); }<br>
                        &nbsp;&nbsp;100% { transform: scale(1); }<br>
                        }<br><br>
                        
                        .animated-box {<br>
                        &nbsp;&nbsp;animation: pulse 2s infinite;<br>
                        }
                    </div>
                </div>
                
                <div class="example">
                    <h3>Rotation Animation</h3>
                    <div class="preview">
                        <div class="animated-box" style="animation: rotate 3s infinite linear;"></div>
                    </div>
                    <div class="code-example">
                        @keyframes rotate {<br>
                        &nbsp;&nbsp;from { transform: rotate(0deg); }<br>
                        &nbsp;&nbsp;to { transform: rotate(360deg); }<br>
                        }<br><br>
                        
                        .rotating-box {<br>
                        &nbsp;&nbsp;animation: rotate 3s infinite linear;<br>
                        }
                    </div>
                </div>
            </div>
        </section>
        
        <!-- Transitions Section -->
        <section id="transitions" class="content-section">
            <h2><i class="fas fa-exchange-alt"></i> CSS Transitions</h2>
            <p>CSS transitions provide a way to control animation speed when changing CSS properties.</p>
            
            <div class="example-container">
                <div class="example">
                    <h3>Hover Transition</h3>
                    <div class="preview">
                        <div class="transition-box"></div>
                    </div>
                    <div class="code-example">
                        .transition-box {<br>
                        &nbsp;&nbsp;transition: all 0.5s ease;<br>
                        }<br><br>
                        
                        .transition-box:hover {<br>
                        &nbsp;&nbsp;transform: rotate(45deg);<br>
                        &nbsp;&nbsp;border-radius: 50%;<br>
                        }
                    </div>
                </div>
                
                <div class="example">
                    <h3>Color Transition</h3>
                    <div class="preview">
                        <div class="transition-box" style="transition: background-color 1s ease, transform 1s ease;"></div>
                    </div>
                    <div class="code-example">
                        .color-box {<br>
                        &nbsp;&nbsp;transition: background-color 1s ease,<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform 1s ease;<br>
                        }<br><br>
                        
                        .color-box:hover {<br>
                        &nbsp;&nbsp;background-color: #667eea;<br>
                        &nbsp;&nbsp;transform: scale(1.2);<br>
                        }
                    </div>
                </div>
            </div>
        </section>
        
        <!-- Transforms Section -->
        <section id="transforms" class="content-section">
            <h2><i class="fas fa-vector-square"></i> CSS Transforms</h2>
            <p>CSS transforms allow you to rotate, scale, skew, or translate elements.</p>
            
            <div class="example-container">
                <div class="example">
                    <h3>Transform Examples</h3>
                    <div class="preview" style="display: flex; justify-content: center; align-items: center;">
                        <div class="transform-item"></div>
                        <div class="transform-item transform-1"></div>
                        <div class="transform-item transform-2"></div>
                        <div class="transform-item transform-3"></div>
                    </div>
                    <div class="code-example">
                        /* Skew */<br>
                        .transform-1 {<br>
                        &nbsp;&nbsp;transform: skew(20deg);<br>
                        }<br><br>
                        
                        /* Rotate */<br>
                        .transform-2 {<br>
                        &nbsp;&nbsp;transform: rotate(45deg);<br>
                        }<br><br>
                        
                        /* Translate */<br>
                        .transform-3 {<br>
                        &nbsp;&nbsp;transform: translate(20px, -10px);<br>
                        }
                    </div>
                </div>
                
                <div class="example">
                    <h3>3D Transform</h3>
                    <div class="preview" style="perspective: 500px;">
                        <div class="transform-item" style="transform: rotateY(40deg); transition: transform 1s;"></div>
                    </div>
                    <div class="code-example">
                        .container {<br>
                        &nbsp;&nbsp;perspective: 500px;<br>
                        }<br><br>
                        
                        .cube {<br>
                        &nbsp;&nbsp;transform: rotateY(40deg);<br>
                        &nbsp;&nbsp;transition: transform 1s;<br>
                        }
                    </div>
                </div>
            </div>
        </section>
        
        <!-- Selectors Section -->
        <section id="selectors" class="content-section">
            <h2><i class="fas fa-mouse-pointer"></i> CSS Selectors</h2>
            <p>CSS selectors are patterns used to select the element(s) you want to style.</p>
            
            <div class="example-container">
                <div class="example">
                    <h3>Basic Selectors</h3>
                    <div class="preview">
                        <div style="text-align: left; padding: 10px;">
                            <p>This is a paragraph</p>
                            <p class="highlight">This is a highlighted paragraph</p>
                            <p id="special">This is a special paragraph</p>
                        </div>
                    </div>
                    <div class="code-example">
                        /* Element selector */<br>
                        p { color: #333; }<br><br>
                        
                        /* Class selector */<br>
                        .highlight { background: yellow; }<br><br>
                        
                        /* ID selector */<br>
                        #special { font-weight: bold; }
                    </div>
                </div>
                
                <div class="example">
                    <h3>Pseudo-classes</h3>
                    <div class="preview">
                        <div style="text-align: left; padding: 10px;">
                            <a href="#" style="display: block; margin: 5px 0;">Regular Link</a>
                            <a href="#" style="display: block; margin: 5px 0;">Hover over me</a>
                            <input type="text" placeholder="Focus on me" style="width: 100%; padding: 5px;">
                        </div>
                    </div>
                    <div class="code-example">
                        /* Unvisited link */<br>
                        a:link { color: blue; }<br><br>
                        
                        /* Hover effect */<br>
                        a:hover { color: red; }<br><br>
                        
                        /* Focused input */<br>
                        input:focus { border-color: blue; }
                    </div>
                </div>
            </div>
        </section>
    </div>
    
    <footer>
        <p>&copy; 2023 CSS Concepts Showcase. All rights reserved.</p>
        <p>Explore the power of CSS with these interactive examples</p>
    </footer>

    <script>
        function showTab(tabId) {
            // Hide all tabs
            document.querySelectorAll('.content-section').forEach(tab => {
                tab.classList.remove('active');
            });
            
            // Show selected tab
            document.getElementById(tabId).classList.add('active');
            
            // Update active button
            document.querySelectorAll('.tab-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            
            event.currentTarget.classList.add('active');
        }
    </script>
</body>
</html>
